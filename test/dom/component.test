var pathFoo = '/test/tmpl/compos/foo.es6';
var pathBar = '/test/tmpl/compos/bar.es6';
UTest({
	$config: {
		'http.include': [
			pathFoo,
			pathBar
		],
		timeout: 3000
	},
	
	'render simple component' () {
		return $render(':bar;', {
				scripts: [
					pathBar
				]
			})
			.pipe((el) => {
				return UTest.domtest(el, `
					find ('.container > div') {
						length 3;
						eq (0) > attr name a;
						eq (1) > attr name b;
						eq (2) > attr name c;
					}
				`)
			});
	},
	
	'bootstrap component`s events': function(){
		return $render(':foo', {
				scripts: [
					pathFoo
				]
			})
			.pipe((el, doc, win) => {
				
				var foo = win.app.find(':foo');
				notEq_(foo, null);
				
				var compos = foo.compos;
				eq_(compos.test_jQuery.length, 1);
				is_(compos.test_querySelector, 'Object');
				is_(compos.test_querySelector.nodeType, 'Number');
				
				return UTest.domtest(el, `
					find ('input')  > val foo;
					find ('button') > do click;
					find ('input')  > val baz;
					
					find ('button') > do mousedown;
					find ('input')  > val qux;
				`)
			});
	}
});