UTest({
	'cache': function(){
		var mask = Mask.mask;
		
		mask.registerHandler(':test', mask.Compo({
			cache: true,
			
			mode: 'server',
			template: "h4 > 'Hello'",
			onRenderStart: assert.avoid('`:test` should be rendered once', 1)
		}));
		
		mask.render(':test');
		mask.render(':test');
		
		has_(mask.render(':test'), '<h4>Hello</h4>');
	},
	
	'cache by property': function(){
		var mask = Mask.mask,
			renderCount = 0;
		
		mask.registerHandler(':foo', mask.Compo({
			cache: {
				byProperty: 'ctx.page'
			},
			
			mode: 'server',
			template: "h4 > 'Hello'",
			onRenderStart: () => ++renderCount
		}));
		
		mask.render(':foo', null, { page: 'baz' });
		eq_(renderCount, 1);
		mask.render(':foo', null, { page: 'baz' });
		eq_(renderCount, 1);
		
		mask.render(':foo', null, { page: 'qux' });
		eq_(renderCount, 2);
		
		mask.render(':foo', null, { page: 'qux' });
		eq_(renderCount, 2);
		
		mask.render(':foo');
		eq_(renderCount, 3);
		
		has_(mask.render(':foo'), '<h4>Hello</h4>');
	}
})